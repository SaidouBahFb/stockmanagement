apiVersion: apps/v1
kind: Deployment
metadata:
  name: stockmanagement-app
  namespace: m2glisi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stockmanagement-app
  template:
    metadata:
      labels:
        app: stockmanagement-app
    spec:
      containers:
      - name: stockmanagement-app
        image: stockmanagement-stockmanagement-app:latest
        imagePullPolicy: Never
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SERVER_PORT
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 120 
          periodSeconds: 10  
          timeoutSeconds: 5 
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 90
          periodSeconds: 5 
          timeoutSeconds: 3
          failureThreshold: 3 
# kubectl create -f app-deployment.yaml
